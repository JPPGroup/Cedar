parameters:
- name: SolutionName  
  default: ''
- name: Build
  default: Release
- name: PoolFlag
  default: ''

steps:  
  - checkout: self
    submodules: recursive
    clean: true
    fetchDepth: 1
  - task: NuGetToolInstaller@1
    inputs:      
      checkLatest: true
  - task: DownloadSecureFile@1
    name: nconf
    displayName: 'Download Nuget Config'
    inputs:
      secureFile: 'nuget.config'
  - script: |
      echo Moving $(nconf.secureFilePath) to the root directory $(System.DefaultWorkingDirectory)...
      xcopy $(nconf.secureFilePath) $(System.DefaultWorkingDirectory)      
      
  - task: DownloadSecureFile@1
    name: Cert
    displayName: 'Download Certificate'
    inputs:
      secureFile: 'JPP2020.pfx'      
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $Secure_String_Pwd = ConvertTo-SecureString "Cedarbarn123" -AsPlainText -Force
        Import-PfxCertificate -FilePath $(Cert.secureFilePath) -CertStoreLocation Cert:\LocalMachine\My -Password $Secure_String_Pwd               
   
  - script: |
      "C:\Program Files\dotnet\dotnet.exe" restore $(Build.SourcesDirectory)\${{ parameters.SolutionName }}.sln --configfile $(System.DefaultWorkingDirectory)\nuget.config --no-cache --verbosity Normal /p:Configuration="${{ parameters.Build }}${{ parameters.PoolFlag }};Platform=x64"
  
  - task: VSBuild@1
    inputs:
      solution: '${{ parameters.SolutionName }}.sln'
      platform: 'x64'
      configuration: '${{ parameters.Build }}${{ parameters.PoolFlag }}'
      clean: true    
      msbuildArgs: '/p:RunWixToolsOutOfProc=true;Id=.${{ parameters.PoolFlag }}'      
   
  - task: CopyFiles@2
    inputs:
      contents: '$(System.DefaultWorkingDirectory)\**\bin\**'
      targetFolder: $(Build.ArtifactStagingDirectory)
      
  - task: CopyFiles@2
    inputs:
      contents: '$(System.DefaultWorkingDirectory)\**\*.addin'
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: Build ${{ parameters.PoolFlag }}